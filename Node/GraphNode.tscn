[gd_scene load_steps=2 format=3 uid="uid://dj75tje62lgl2"]

[sub_resource type="GDScript" id="GDScript_ws2j7"]
script/source = "extends GraphNode

var slot_count: int = 0


func _ready() -> void:
	child_entered_tree.connect(_on_child_added)



func _on_child_added(child: Node) -> void:
	match slot_count:
		0:
			set_slot(slot_count, false, 0, Color.DIM_GRAY, false, 0, Color.DIM_GRAY)
			slot_count += 1
			return
		1:
			set_slot(slot_count, true, 1, Color.DIM_GRAY, true, 1, Color.DIM_GRAY)
			slot_count += 1
			return

	set_slot(
		slot_count,
		true, 0, Color.WEB_PURPLE,
		true, 0, Color.REBECCA_PURPLE
	)
	slot_count += 1




func _unhandled_input(event: InputEvent) -> void:
	if event is InputEventKey:
		if event.keycode == KEY_BACKSPACE and event.pressed and not event.echo:
			if is_selected():
				queue_free() 




func _on_delete_request() -> void:
	queue_free()
"

[node name="GraphNode" type="GraphNode"]
offset_left = 15.0
offset_top = 17.0
offset_right = 237.0
offset_bottom = 72.0
resizable = true
title = "Input"
script = SubResource("GDScript_ws2j7")
metadata/Exist = false

[connection signal="delete_request" from="." to="." method="_on_delete_request"]
[connection signal="resize_request" from="." to="." method="_on_resize_request"]
[connection signal="slot_updated" from="." to="." method="_on_slot_updated"]
